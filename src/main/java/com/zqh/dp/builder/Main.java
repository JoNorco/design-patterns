package com.zqh.dp.builder;

/**
 * author: zqh
 * email：zqhfsf@gmail.com
 * date: 2018/2/23 14:00
 * description: 设计模式-建造者模式：
 * 1.建造者模式分4块，产品类、抽象建造者、建造者、导演类。
 * 2.产品类：一般是一个比较复杂的对象，该产品也可以抽象类和具体的实现类组成
 * 3.抽象建造者：一般由两部分组成。一为产品的组建；二为产品的返回
 * 4.建造者：是抽象建造者的具体实现。
 * 5.导演类：容易改变的地方，负责调用建造者组建产品，和建造者打交道不与产品打交道
 * <p>
 * 建造者模式与工厂模式的区别：
 * <p>
 * 我们可以看到，建造者模式与工厂模式是极为相似的，总体上，建造者模式仅仅只比工厂模式多了一个“导演类”的角色。
 * 在建造者模式的类图中，假如把这个导演类看做是最终调用的客户端，那么图中剩余的部分就可以看作是一个简单的工厂模式了。
 * 与工厂模式相比，建造者模式一般用来创建更为复杂的对象，因为对象的创建过程更为复杂，
 * 因此将对象的创建过程独立出来组成一个新的类——导演类。也就是说，
 * 工厂模式是将对象的全部创建过程封装在工厂类中，由工厂类向客户端提供最终的产品；
 * 而建造者模式中，建造者类一般只提供产品类中各个组件的建造，而将具体建造过程交付给导演类。
 * 由导演类负责将各个组件按照特定的规则组建为产品，然后将组建好的产品交付给客户端。
 * <p>
 * 总结
 * <p>
 * 建造者模式与工厂模式类似，他们都是建造者模式，适用的场景也很相似。
 * 一般来说，如果产品的建造很复杂，那么请用工厂模式；
 * 如果产品的建造更复杂，那么请用建造者模式。
 **/
public class Main {
    public static void main(String[] args) {
        Director director = new Director();
        director.construct180223();
        director.construct180224();
    }
}
